/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Follow as PrismaFollow } from "@prisma/client";

export class FollowServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FollowCountArgs, "select">): Promise<number> {
    return this.prisma.follow.count(args);
  }

  async follows(args: Prisma.FollowFindManyArgs): Promise<PrismaFollow[]> {
    return this.prisma.follow.findMany(args);
  }
  async follow(
    args: Prisma.FollowFindUniqueArgs
  ): Promise<PrismaFollow | null> {
    return this.prisma.follow.findUnique(args);
  }
  async createFollow(args: Prisma.FollowCreateArgs): Promise<PrismaFollow> {
    return this.prisma.follow.create(args);
  }
  async updateFollow(args: Prisma.FollowUpdateArgs): Promise<PrismaFollow> {
    return this.prisma.follow.update(args);
  }
  async deleteFollow(args: Prisma.FollowDeleteArgs): Promise<PrismaFollow> {
    return this.prisma.follow.delete(args);
  }
}
